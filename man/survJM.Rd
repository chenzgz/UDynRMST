% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survJM.R
\name{survJM}
\alias{survJM}
\title{Title Dynamic prediction in joint model based on restricted mean survival time (RMST)}
\usage{
survJM(object,newdata,idVar, simulate = TRUE, survTimes = NULL, last.time = NULL, M = 200, CI.levels = c(0.025, 0.975), scale = 1.6)
}
\arguments{
\item{object}{an object inheriting from class RMST_Joint.}

\item{newdata}{a data frame that contains the longitudinal and covariate information for the subjects for which prediction of dynamic RMST is required.}

\item{idVar}{the name of the variable in newdata that identifies the different subjects.}

\item{simulate}{logical; if TRUE, a Monte Carlo approach is used to estimate dynamic RMST. If FALSE, a first order estimator is used instead.}

\item{survTimes}{a numeric vector of times for which prediction dynamic RMST are to be computed}

\item{last.time}{a numeric vector. This specifies the known time at which each of the subjects in newdat was known to be alive. If NULL, then this is automatically taken as the last time each subject provided a longitudinal measurement.}

\item{M}{integer denoting how many Monte Carlo samples to use}

\item{CI.levels}{a numeric vector of length two that specifies which quantiles to use for the calculation of confidence interval for the predicted dynamic RMST.}

\item{scale}{a numeric scalar that controls the acceptance rate of the Metropolis-Hastings algorithm}
}
\value{
A list of class survJM with components:
\describe{
 \item{summaries}{a list with elements numeric matrices with numeric summaries of the predicted survival time for each subject.}
 \item{survTimes}{a copy of the survTimes argument.}
 \item{last.time}{a numeric vector with the time of the last available longitudinal measurement of each subject.}
 \item{obs.times}{a list with elements numeric vectors denoting the timings of the longitudinal measurements for each subject.}
 \item{y}{a list with elements numeric vectors denoting the longitudinal responses for each subject.}
 \item{fitted.times}{a list with elements numeric vectors denoting the timings of the longitudinal measurements for each subject and last.time.}
 \item{fitted.y}{Measures of longitudinal covariates from longitudinal model fits}
 \item {ry} {Range of values for the measurement of longitudinal covariates}}
}
\description{
This function computes the the survival time after the last observed time for which a longitudinal measurement was available.
}
\examples{
library(UDynRMST)
data(pbc2)
data(pbc2.id)
head(pbc2)
head(pbc2.id)
pbc2$status<-as.numeric(pbc2$status=="dead")
pbc2$drug<-as.numeric(pbc2$drug=="D-penicil")
pbc2$sex<-as.numeric(pbc2$sex=="female")
pbc2.id$status<-as.numeric(pbc2.id$status=="dead")
pbc2.id$drug<-as.numeric(pbc2.id$drug=="D-penicil")
pbc2.id$sex<-as.numeric(pbc2.id$sex=="female")
tau=max(pbc2[which(pbc2$status==1),]$years)
pbc2$time<-pmin(pbc2$years,tau)
pbc2$status1<-ifelse(pbc2$time==pbc2$years,pbc2$status,0)
indd<-pbc2$year>tau
data<-pbc2[!indd,]
pbc2.id$time<-pmin(pbc2.id$years,tau)
pbc2.id$status1<-ifelse(pbc2.id$time==pbc2.id$years,pbc2.id$status,0)
data.id<-pbc2.id
data<-data[order(data$id),]
data.id<-data.id[order(data.id$id),]
fit_nonlinear3 <- lme(log(serBilir) ~ ns(year,3)+ age + sex + drug,
random =list(id = pdDiag(form = ~ ns(year, 3))), data =data)
p<-pseudomean(data.id$time,data.id$status1,tau)
fitSURV<-geeglm(p~drug+sex+age,data=data.id,id= id)
object5<-jointModelRMST(fit_nonlinear3,fitSURV,data.id$time,"year")
newdata_5 <- pbc2[pbc2$id ==5, ]
#s<-survJM(object = object5, newdata = newdata_5,idVar = "id",simulate =FALSE)
survRes_5 <- list()
for (o in 1:dim(newdata_5)[1]) {
 newdataDyn_5 <- newdata_5[1:o, ]
 survRes_5[[o]] <-  survJM(object = object5, newdata = newdataDyn_5,idVar = "id",
                           simulate = TRUE, survTimes = NULL, last.time = NULL,
                           M =1000, CI.levels = c(0.025, 0.975), scale = 1.6)
}
col3="darkorange2"
col1="steelblue4"
col2="lightcoral"
i=6
par(par(mar = c(5,4,4,2.1)),oma=c(0.5,1,0.5,1))
rng <- range(survRes_5[[i]]$obs.times[[1]], survRes_5[[i]]$survTimes)
plot(survRes_5[[i]]$obs.times[[1]],survRes_5[[i]]$y[[1]],xlim=rng,ylim=survRes_5[[i]]$ry,pch=8,ylab="",xlab="",
    xaxt="n",yaxs = "i",yaxt="n",lwd=3,col=col1)
axis(1,0:15,cex.axis=1.5,lwd=1.6,font.axis=2,tcl=-0.4,hadj=0.9)
axis(2,cex.axis=1.5,lwd=1.6,font.axis=2,tcl=-0.4,hadj=0.9,col.axis=col1,col.ticks =col1)
title(ylab="log serum bilirubin",line=2.2, cex.lab=1.5,las=0,font.lab=2,col.lab=col1)
title(xlab="Prediction time in years (s)",line=2.2, cex.lab=1.5,las=0,font.lab=2)
lines(survRes_5[[i]]$fitted.times[[1]],survRes_5[[i]]$fitted.y[[1]],lwd=3)
abline(v = survRes_5[[i]]$last.time[1], lty = 3,lwd=3)
par(new = TRUE)
r.=survRes_5[[i]]$summaries[[1]]
matplot(r.[, 1], r.[, -c(1,3), drop = FALSE], type = "l", col =  c(col3,col3, col3), lwd = c(6, 6, 6),
       lty = c(1, 3, 3),xlim = rng,ylim=c(0,20),
       ylab = "", xlab = "", axes = FALSE, yaxs = "i")
axis(4, las = 2, cex.axis = 1.5,line=0,lwd=1.6,font.axis=2,tcl=-0.3,hadj=0.6,col.axis=col3,col.ticks =col3)
mtext("Dynamic RMST",side=4,line=1.8, cex=1.5,las=0,font=2,col=col3)
title(list("c                                   ",font=7,cex=2.5))
title(list(paste0("Patient A ", ifelse(i==1,paste(" ","1st"),ifelse(i==2,paste(" ","2nd"),paste("  ",i,"th")))),font=7 ,cex=2))
}
